# An event indicating an update to a set of records.
#
# ```RecordsChanged``` events are fired for changes that this instance
# of the app made locally as well as for changes synced from other
# (remote) instances of the app.  Use
# {Dropbox.Datastore.RecordsChanged#isLocal} to tell the difference.
#
# Use ```Datastore.recordsChanged.addListener()``` to receive these
# events.
class Dropbox.Datastore.RecordsChanged
  # @private
  constructor: (@_recordsByTable, @_local) ->

  # @private (not really private, but documenting this is not worth the space it takes)
  toString: ->
    tableCount = 0
    recordCount = 0
    for tableid, list of @_recordsByTable
      tableCount += 1
      recordCount += list.length
    t = "#{tableCount} #{if tableCount == 1 then 'table' else 'tables'}"
    r = "#{recordCount} #{if recordCount == 1 then 'record' else 'records'}"
    "Datastore.RecordsChanged(#{r} in #{t} changed #{if @_local then 'locally' else 'remotely'})"

  # @private
  @_fromRecordList: (records, local) ->
    recordsByTable = {}
    for record in records
      tid = record._tid
      if not recordsByTable[tid]?
        recordsByTable[tid] = []
      recordsByTable[tid].push record
    return new RecordsChanged recordsByTable, local

  # Returns a map of table IDs to lists of record objects that have
  # changed.
  #
  # @return {Object<String, Array<Dropbox.Datastore.Record>>} a map
  #   storing the records that were changed
  affectedRecordsByTable: ->
    @_recordsByTable

  # Returns the list of record objects that have changed in
  # table ```tableId```.
  #
  # @param {String} tableId the ID of a table
  # @return {Array<Dropbox.Datastore.Record>} the list of record
  #   objects that changed in the given table
  affectedRecordsForTable: (tableId) ->
    @_recordsByTable[tableId] ? []

  # Returns true if the event was generated as a result of local
  # changes, rather than changes synchronized from the server.
  #
  # @return {Boolean} whether the event was generated by local
  #   changes
  isLocal: ->
    @_local

RecordsChanged = Dropbox.Datastore.RecordsChanged
